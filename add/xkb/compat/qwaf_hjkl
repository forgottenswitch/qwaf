default partial xkb_compatibility "default" {
    include "qwaf_hjkl(hjkl_iso)"
    include "qwaf_hjkl(lv2_latch)"
    include "qwaf_hjkl(shift_lock)"
};

partial xkb_compatibility "hjkl_iso" {
    interpret.repeat = True;

    interpret ISO_Fast_Cursor_Left+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<LEFT>);
    };

    interpret ISO_Fast_Cursor_Down+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<DOWN>);
    };

    interpret ISO_Fast_Cursor_Up+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<UP>);
    };

    interpret ISO_Fast_Cursor_Right+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<RGHT>);
    };

    interpret ISO_Partial_Line_Up+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<PGUP>);
    };

    interpret ISO_Partial_Line_Down+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<PGDN>);
    };

    interpret ISO_Partial_Space_Left+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<HOME>);
    };

    interpret ISO_Partial_Space_Right+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<END>);
    };

    interpret ISO_Set_Margin_Left+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<BKSP>);
    };

    interpret ISO_Set_Margin_Right+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<DELE>);
    };

    interpret ISO_Release_Margin_Left+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<RTRN>);
    };

    interpret ISO_Release_Margin_Right+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<INS>);
    };

    interpret ISO_Release_Both_Margins+AnyOfOrNone(all) {
        action = RedirectKey(KeyCode=<ESC>);
    };
};

partial xkb_compatibility "lv2_latch" {
    interpret ISO_Level2_Latch+AnyOfOrNone(all) {
        useModMapMods = level1;
        repeat = False;
        action = LatchMods(modifiers=Shift,clearLocks,latchToLock);
    };

};

partial xkb_compatibility "no_numlock" {
    interpret Num_Lock+AnyOf(All) {
        action= NoAction();
    };
};

partial xkb_compatibility "latching_shifts" {
    interpret Shift_L+AnyOfOrNone(all) {
        useModMapMods= level1;
        repeat= False;
        action= LatchMods(modifiers=Shift, clearLocks, latchToLock);
    };

    interpret Shift_R+AnyOfOrNone(all) {
        useModMapMods= level1;
        repeat= False;
        action= LatchMods(modifiers=Shift, clearLocks, latchToLock);
    };
};

partial xkb_compatibility "shift_lock" {
    interpret Shift_Lock+AnyOfOrNone(all) {
        action= LockMods(modifiers=Shift);
    };
};

